// Generated from scanner\DecafLexer.g by ANTLR 4.4

	package compiler.scanner;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DecafLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, WHITESPACE=2, INT_LITERAL=3, HEX_LITERAL=4, HEX_ERROR=5, DECIMAL_LITERAL=6, 
		CHAR_LITERAL=7, CHAR_ERROR=8, STRING_LITERAL=9, STRING_ERROR=10, ASIG_OP=11, 
		EQUAL=12, NEGATION=13, ADD_ARITH_OP=14, MULT_ARITH_OP=15, COND_OP=16, 
		REL_OP=17, EQ_OP=18, BOOL_LITERAL=19, LITERAL=20, KW_INT=21, KW_BOOL=22, 
		KW_CALLOUT=23, KW_VOID=24, KW_IF=25, KW_ELSE=26, KW_FOR=27, KW_WHILE=28, 
		KW_RETURN=29, KW_BREAK=30, KW_CONTINUE=31, KW_TRUE=32, KW_FALSE=33, KW_CLASS=34, 
		ID=35, PARENTESIS_I=36, PARENTESIS_D=37, CORCHETE_I=38, CORCHETE_D=39, 
		LLAVE_I=40, LLAVE_D=41, PLUS=42, MINUS=43, MULT=44, DIV=45, AND=46, OR=47, 
		PUNTO_COMA=48, COMA=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'"
	};
	public static final String[] ruleNames = {
		"COMMENT", "WHITESPACE", "DIGIT", "ALPHA", "ALPHA_NUM", "HEX_DIGIT", "INT_LITERAL", 
		"HEX_LITERAL", "HEX_ERROR", "DECIMAL_LITERAL", "ESCAPE_CHAR", "CHAR_LITERAL", 
		"CHAR_ERROR", "STRING_LITERAL", "STRING_ERROR", "ASIG_OP", "EQUAL", "NEGATION", 
		"ADD_ARITH_OP", "MULT_ARITH_OP", "COND_OP", "REL_OP", "EQ_OP", "BOOL_LITERAL", 
		"LITERAL", "KW_INT", "KW_BOOL", "KW_CALLOUT", "KW_VOID", "KW_IF", "KW_ELSE", 
		"KW_FOR", "KW_WHILE", "KW_RETURN", "KW_BREAK", "KW_CONTINUE", "KW_TRUE", 
		"KW_FALSE", "KW_CLASS", "ID", "PARENTESIS_I", "PARENTESIS_D", "CORCHETE_I", 
		"CORCHETE_D", "LLAVE_I", "LLAVE_D", "PLUS", "MINUS", "MULT", "DIV", "AND", 
		"OR", "PUNTO_COMA", "COMA"
	};


	public DecafLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "DecafLexer.g"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 0: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		case 1: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip(); break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip(); break;
		}
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u019a\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\2\7\2t\n\2\f\2\16\2"+
		"w\13\2\3\2\3\2\3\2\3\2\3\2\7\2~\n\2\f\2\16\2\u0081\13\2\3\2\3\2\5\2\u0085"+
		"\n\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\5\6\u0092\n\6\3\7\3\7"+
		"\5\7\u0096\n\7\3\b\3\b\5\b\u009a\n\b\3\t\3\t\3\t\3\t\6\t\u00a0\n\t\r\t"+
		"\16\t\u00a1\3\n\3\n\3\n\3\n\7\n\u00a8\n\n\f\n\16\n\u00ab\13\n\3\13\6\13"+
		"\u00ae\n\13\r\13\16\13\u00af\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\5"+
		"\r\u00bc\n\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\5\16\u00c6\n\16\3"+
		"\16\3\16\6\16\u00ca\n\16\r\16\16\16\u00cb\3\16\3\16\3\16\6\16\u00d1\n"+
		"\16\r\16\16\16\u00d2\5\16\u00d5\n\16\3\17\3\17\3\17\3\17\3\17\3\17\7\17"+
		"\u00dd\n\17\f\17\16\17\u00e0\13\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\7\20\u00ea\n\20\f\20\16\20\u00ed\13\20\3\20\5\20\u00f0\n\20\3\21"+
		"\3\21\3\21\3\21\3\21\5\21\u00f7\n\21\3\22\3\22\3\23\3\23\3\24\3\24\5\24"+
		"\u00ff\n\24\3\25\3\25\3\25\5\25\u0104\n\25\3\26\3\26\5\26\u0108\n\26\3"+
		"\27\3\27\3\27\3\27\3\27\5\27\u010f\n\27\3\30\3\30\3\30\3\30\5\30\u0115"+
		"\n\30\3\31\3\31\5\31\u0119\n\31\3\32\3\32\3\32\5\32\u011e\n\32\3\33\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3"+
		"\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 "+
		"\3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$"+
		"\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\5)\u0174\n)\3)\3)\7)\u0178\n)\f)"+
		"\16)\u017b\13)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61"+
		"\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\67\3\67"+
		"\2\28\3\3\5\4\7\2\t\2\13\2\r\2\17\5\21\6\23\7\25\b\27\2\31\t\33\n\35\13"+
		"\37\f!\r#\16%\17\'\20)\21+\22-\23/\24\61\25\63\26\65\27\67\309\31;\32"+
		"=\33?\34A\35C\36E\37G I!K\"M#O$Q%S&U\'W(Y)[*]+_,a-c.e/g\60i\61k\62m\63"+
		"\3\2\f\3\2\f\f\5\2\13\f\17\17\"\"\3\2\62;\4\2C\\c|\5\2\62;C\\c|\7\2$$"+
		"))^^ppvv\6\2\f\f$$))^^\3\2))\4\2$$))\4\2>>@@\u01ba\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3\u0084\3"+
		"\2\2\2\5\u0088\3\2\2\2\7\u008b\3\2\2\2\t\u008d\3\2\2\2\13\u0091\3\2\2"+
		"\2\r\u0095\3\2\2\2\17\u0099\3\2\2\2\21\u009b\3\2\2\2\23\u00a3\3\2\2\2"+
		"\25\u00ad\3\2\2\2\27\u00b1\3\2\2\2\31\u00bb\3\2\2\2\33\u00d4\3\2\2\2\35"+
		"\u00d6\3\2\2\2\37\u00e3\3\2\2\2!\u00f6\3\2\2\2#\u00f8\3\2\2\2%\u00fa\3"+
		"\2\2\2\'\u00fe\3\2\2\2)\u0103\3\2\2\2+\u0107\3\2\2\2-\u010e\3\2\2\2/\u0114"+
		"\3\2\2\2\61\u0118\3\2\2\2\63\u011d\3\2\2\2\65\u011f\3\2\2\2\67\u0123\3"+
		"\2\2\29\u012b\3\2\2\2;\u0133\3\2\2\2=\u0138\3\2\2\2?\u013b\3\2\2\2A\u0140"+
		"\3\2\2\2C\u0144\3\2\2\2E\u014a\3\2\2\2G\u0151\3\2\2\2I\u0157\3\2\2\2K"+
		"\u0160\3\2\2\2M\u0165\3\2\2\2O\u016b\3\2\2\2Q\u0173\3\2\2\2S\u017c\3\2"+
		"\2\2U\u017e\3\2\2\2W\u0180\3\2\2\2Y\u0182\3\2\2\2[\u0184\3\2\2\2]\u0186"+
		"\3\2\2\2_\u0188\3\2\2\2a\u018a\3\2\2\2c\u018c\3\2\2\2e\u018e\3\2\2\2g"+
		"\u0190\3\2\2\2i\u0193\3\2\2\2k\u0196\3\2\2\2m\u0198\3\2\2\2op\7\61\2\2"+
		"pq\7\61\2\2qu\3\2\2\2rt\n\2\2\2sr\3\2\2\2tw\3\2\2\2us\3\2\2\2uv\3\2\2"+
		"\2vx\3\2\2\2wu\3\2\2\2x\u0085\5\5\3\2yz\7\61\2\2z{\7,\2\2{\177\3\2\2\2"+
		"|~\n\2\2\2}|\3\2\2\2~\u0081\3\2\2\2\177}\3\2\2\2\177\u0080\3\2\2\2\u0080"+
		"\u0082\3\2\2\2\u0081\177\3\2\2\2\u0082\u0083\7,\2\2\u0083\u0085\7\61\2"+
		"\2\u0084o\3\2\2\2\u0084y\3\2\2\2\u0085\u0086\3\2\2\2\u0086\u0087\b\2\2"+
		"\2\u0087\4\3\2\2\2\u0088\u0089\t\3\2\2\u0089\u008a\b\3\3\2\u008a\6\3\2"+
		"\2\2\u008b\u008c\t\4\2\2\u008c\b\3\2\2\2\u008d\u008e\t\5\2\2\u008e\n\3"+
		"\2\2\2\u008f\u0092\5\7\4\2\u0090\u0092\5\t\5\2\u0091\u008f\3\2\2\2\u0091"+
		"\u0090\3\2\2\2\u0092\f\3\2\2\2\u0093\u0096\5\7\4\2\u0094\u0096\t\5\2\2"+
		"\u0095\u0093\3\2\2\2\u0095\u0094\3\2\2\2\u0096\16\3\2\2\2\u0097\u009a"+
		"\5\25\13\2\u0098\u009a\5\21\t\2\u0099\u0097\3\2\2\2\u0099\u0098\3\2\2"+
		"\2\u009a\20\3\2\2\2\u009b\u009c\7\62\2\2\u009c\u009d\7z\2\2\u009d\u009f"+
		"\3\2\2\2\u009e\u00a0\5\r\7\2\u009f\u009e\3\2\2\2\u00a0\u00a1\3\2\2\2\u00a1"+
		"\u009f\3\2\2\2\u00a1\u00a2\3\2\2\2\u00a2\22\3\2\2\2\u00a3\u00a4\7\62\2"+
		"\2\u00a4\u00a5\7z\2\2\u00a5\u00a9\3\2\2\2\u00a6\u00a8\n\6\2\2\u00a7\u00a6"+
		"\3\2\2\2\u00a8\u00ab\3\2\2\2\u00a9\u00a7\3\2\2\2\u00a9\u00aa\3\2\2\2\u00aa"+
		"\24\3\2\2\2\u00ab\u00a9\3\2\2\2\u00ac\u00ae\5\7\4\2\u00ad\u00ac\3\2\2"+
		"\2\u00ae\u00af\3\2\2\2\u00af\u00ad\3\2\2\2\u00af\u00b0\3\2\2\2\u00b0\26"+
		"\3\2\2\2\u00b1\u00b2\7)\2\2\u00b2\u00b3\7^\2\2\u00b3\u00b4\3\2\2\2\u00b4"+
		"\u00b5\t\7\2\2\u00b5\u00b6\7)\2\2\u00b6\30\3\2\2\2\u00b7\u00b8\7)\2\2"+
		"\u00b8\u00b9\n\b\2\2\u00b9\u00bc\7)\2\2\u00ba\u00bc\5\27\f\2\u00bb\u00b7"+
		"\3\2\2\2\u00bb\u00ba\3\2\2\2\u00bc\32\3\2\2\2\u00bd\u00be\7)\2\2\u00be"+
		"\u00bf\t\b\2\2\u00bf\u00d5\7)\2\2\u00c0\u00c1\7)\2\2\u00c1\u00c2\7^\2"+
		"\2\u00c2\u00c3\3\2\2\2\u00c3\u00c5\n\7\2\2\u00c4\u00c6\7)\2\2\u00c5\u00c4"+
		"\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00d5\3\2\2\2\u00c7\u00c9\7)\2\2\u00c8"+
		"\u00ca\n\t\2\2\u00c9\u00c8\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00c9\3\2"+
		"\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00cd\3\2\2\2\u00cd\u00d5\7)\2\2\u00ce"+
		"\u00d0\7)\2\2\u00cf\u00d1\n\t\2\2\u00d0\u00cf\3\2\2\2\u00d1\u00d2\3\2"+
		"\2\2\u00d2\u00d0\3\2\2\2\u00d2\u00d3\3\2\2\2\u00d3\u00d5\3\2\2\2\u00d4"+
		"\u00bd\3\2\2\2\u00d4\u00c0\3\2\2\2\u00d4\u00c7\3\2\2\2\u00d4\u00ce\3\2"+
		"\2\2\u00d5\34\3\2\2\2\u00d6\u00de\7$\2\2\u00d7\u00d8\7^\2\2\u00d8\u00dd"+
		"\7$\2\2\u00d9\u00da\7^\2\2\u00da\u00dd\7)\2\2\u00db\u00dd\n\n\2\2\u00dc"+
		"\u00d7\3\2\2\2\u00dc\u00d9\3\2\2\2\u00dc\u00db\3\2\2\2\u00dd\u00e0\3\2"+
		"\2\2\u00de\u00dc\3\2\2\2\u00de\u00df\3\2\2\2\u00df\u00e1\3\2\2\2\u00e0"+
		"\u00de\3\2\2\2\u00e1\u00e2\7$\2\2\u00e2\36\3\2\2\2\u00e3\u00eb\7$\2\2"+
		"\u00e4\u00e5\7^\2\2\u00e5\u00ea\7$\2\2\u00e6\u00e7\7^\2\2\u00e7\u00ea"+
		"\7)\2\2\u00e8\u00ea\n\n\2\2\u00e9\u00e4\3\2\2\2\u00e9\u00e6\3\2\2\2\u00e9"+
		"\u00e8\3\2\2\2\u00ea\u00ed\3\2\2\2\u00eb\u00e9\3\2\2\2\u00eb\u00ec\3\2"+
		"\2\2\u00ec\u00ef\3\2\2\2\u00ed\u00eb\3\2\2\2\u00ee\u00f0\7)\2\2\u00ef"+
		"\u00ee\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0 \3\2\2\2\u00f1\u00f7\5#\22\2"+
		"\u00f2\u00f3\7-\2\2\u00f3\u00f7\7?\2\2\u00f4\u00f5\7/\2\2\u00f5\u00f7"+
		"\7?\2\2\u00f6\u00f1\3\2\2\2\u00f6\u00f2\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f7"+
		"\"\3\2\2\2\u00f8\u00f9\7?\2\2\u00f9$\3\2\2\2\u00fa\u00fb\7#\2\2\u00fb"+
		"&\3\2\2\2\u00fc\u00ff\5_\60\2\u00fd\u00ff\5a\61\2\u00fe\u00fc\3\2\2\2"+
		"\u00fe\u00fd\3\2\2\2\u00ff(\3\2\2\2\u0100\u0104\5c\62\2\u0101\u0104\5"+
		"e\63\2\u0102\u0104\7\'\2\2\u0103\u0100\3\2\2\2\u0103\u0101\3\2\2\2\u0103"+
		"\u0102\3\2\2\2\u0104*\3\2\2\2\u0105\u0108\5i\65\2\u0106\u0108\5g\64\2"+
		"\u0107\u0105\3\2\2\2\u0107\u0106\3\2\2\2\u0108,\3\2\2\2\u0109\u010f\t"+
		"\13\2\2\u010a\u010b\7>\2\2\u010b\u010f\7?\2\2\u010c\u010d\7@\2\2\u010d"+
		"\u010f\7?\2\2\u010e\u0109\3\2\2\2\u010e\u010a\3\2\2\2\u010e\u010c\3\2"+
		"\2\2\u010f.\3\2\2\2\u0110\u0111\7?\2\2\u0111\u0115\7?\2\2\u0112\u0113"+
		"\7#\2\2\u0113\u0115\7?\2\2\u0114\u0110\3\2\2\2\u0114\u0112\3\2\2\2\u0115"+
		"\60\3\2\2\2\u0116\u0119\5K&\2\u0117\u0119\5M\'\2\u0118\u0116\3\2\2\2\u0118"+
		"\u0117\3\2\2\2\u0119\62\3\2\2\2\u011a\u011e\5\17\b\2\u011b\u011e\5\31"+
		"\r\2\u011c\u011e\5\61\31\2\u011d\u011a\3\2\2\2\u011d\u011b\3\2\2\2\u011d"+
		"\u011c\3\2\2\2\u011e\64\3\2\2\2\u011f\u0120\7k\2\2\u0120\u0121\7p\2\2"+
		"\u0121\u0122\7v\2\2\u0122\66\3\2\2\2\u0123\u0124\7d\2\2\u0124\u0125\7"+
		"q\2\2\u0125\u0126\7q\2\2\u0126\u0127\7n\2\2\u0127\u0128\7g\2\2\u0128\u0129"+
		"\7c\2\2\u0129\u012a\7p\2\2\u012a8\3\2\2\2\u012b\u012c\7e\2\2\u012c\u012d"+
		"\7c\2\2\u012d\u012e\7n\2\2\u012e\u012f\7n\2\2\u012f\u0130\7q\2\2\u0130"+
		"\u0131\7w\2\2\u0131\u0132\7v\2\2\u0132:\3\2\2\2\u0133\u0134\7x\2\2\u0134"+
		"\u0135\7q\2\2\u0135\u0136\7k\2\2\u0136\u0137\7f\2\2\u0137<\3\2\2\2\u0138"+
		"\u0139\7k\2\2\u0139\u013a\7h\2\2\u013a>\3\2\2\2\u013b\u013c\7g\2\2\u013c"+
		"\u013d\7n\2\2\u013d\u013e\7u\2\2\u013e\u013f\7g\2\2\u013f@\3\2\2\2\u0140"+
		"\u0141\7h\2\2\u0141\u0142\7q\2\2\u0142\u0143\7t\2\2\u0143B\3\2\2\2\u0144"+
		"\u0145\7y\2\2\u0145\u0146\7j\2\2\u0146\u0147\7k\2\2\u0147\u0148\7n\2\2"+
		"\u0148\u0149\7g\2\2\u0149D\3\2\2\2\u014a\u014b\7t\2\2\u014b\u014c\7g\2"+
		"\2\u014c\u014d\7v\2\2\u014d\u014e\7w\2\2\u014e\u014f\7t\2\2\u014f\u0150"+
		"\7p\2\2\u0150F\3\2\2\2\u0151\u0152\7d\2\2\u0152\u0153\7t\2\2\u0153\u0154"+
		"\7g\2\2\u0154\u0155\7c\2\2\u0155\u0156\7m\2\2\u0156H\3\2\2\2\u0157\u0158"+
		"\7e\2\2\u0158\u0159\7q\2\2\u0159\u015a\7p\2\2\u015a\u015b\7v\2\2\u015b"+
		"\u015c\7k\2\2\u015c\u015d\7p\2\2\u015d\u015e\7w\2\2\u015e\u015f\7g\2\2"+
		"\u015fJ\3\2\2\2\u0160\u0161\7v\2\2\u0161\u0162\7t\2\2\u0162\u0163\7w\2"+
		"\2\u0163\u0164\7g\2\2\u0164L\3\2\2\2\u0165\u0166\7h\2\2\u0166\u0167\7"+
		"c\2\2\u0167\u0168\7n\2\2\u0168\u0169\7u\2\2\u0169\u016a\7g\2\2\u016aN"+
		"\3\2\2\2\u016b\u016c\7e\2\2\u016c\u016d\7n\2\2\u016d\u016e\7c\2\2\u016e"+
		"\u016f\7u\2\2\u016f\u0170\7u\2\2\u0170P\3\2\2\2\u0171\u0174\5\t\5\2\u0172"+
		"\u0174\7a\2\2\u0173\u0171\3\2\2\2\u0173\u0172\3\2\2\2\u0174\u0179\3\2"+
		"\2\2\u0175\u0178\5\13\6\2\u0176\u0178\7a\2\2\u0177\u0175\3\2\2\2\u0177"+
		"\u0176\3\2\2\2\u0178\u017b\3\2\2\2\u0179\u0177\3\2\2\2\u0179\u017a\3\2"+
		"\2\2\u017aR\3\2\2\2\u017b\u0179\3\2\2\2\u017c\u017d\7*\2\2\u017dT\3\2"+
		"\2\2\u017e\u017f\7+\2\2\u017fV\3\2\2\2\u0180\u0181\7]\2\2\u0181X\3\2\2"+
		"\2\u0182\u0183\7_\2\2\u0183Z\3\2\2\2\u0184\u0185\7}\2\2\u0185\\\3\2\2"+
		"\2\u0186\u0187\7\177\2\2\u0187^\3\2\2\2\u0188\u0189\7-\2\2\u0189`\3\2"+
		"\2\2\u018a\u018b\7/\2\2\u018bb\3\2\2\2\u018c\u018d\7,\2\2\u018dd\3\2\2"+
		"\2\u018e\u018f\7\61\2\2\u018ff\3\2\2\2\u0190\u0191\7(\2\2\u0191\u0192"+
		"\7(\2\2\u0192h\3\2\2\2\u0193\u0194\7~\2\2\u0194\u0195\7~\2\2\u0195j\3"+
		"\2\2\2\u0196\u0197\7=\2\2\u0197l\3\2\2\2\u0198\u0199\7.\2\2\u0199n\3\2"+
		"\2\2!\2u\177\u0084\u0091\u0095\u0099\u00a1\u00a9\u00af\u00bb\u00c5\u00cb"+
		"\u00d2\u00d4\u00dc\u00de\u00e9\u00eb\u00ef\u00f6\u00fe\u0103\u0107\u010e"+
		"\u0114\u0118\u011d\u0173\u0177\u0179\4\3\2\2\3\3\3";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}